import { PassportData, SignatureAlgorithm } from '../types.js';
import { hashAlgosTypes } from '../../constants/constants.js';
import { countries } from '../../constants/countries.js';
export interface IdDocInput {
    idType: 'mock_passport' | 'mock_id_card';
    dgHashAlgo?: hashAlgosTypes;
    eContentHashAlgo?: hashAlgosTypes;
    signatureType?: SignatureAlgorithm;
    nationality?: (typeof countries)[keyof typeof countries];
    birthDate?: string;
    expiryDate?: string;
    passportNumber?: string;
    lastName?: string;
    firstName?: string;
    sex?: 'M' | 'F';
}
export declare function generateMockDSC(signatureType: string): Promise<{
    privateKeyPem: string;
    dsc: string;
}>;
export declare function genMockIdDoc(userInput?: Partial<IdDocInput>, mockDSC?: {
    dsc: string;
    privateKeyPem: string;
}): PassportData;
export declare function genMockIdDocAndInitDataParsing(userInput?: Partial<IdDocInput>): PassportData;
